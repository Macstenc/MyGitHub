import java.time.LocalDateTime

plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'pl.nullpointerexception'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
compileJava{
	options.compilerArgs << '-parameters'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.auth0:java-jwt:4.0.0'
	implementation 'org.liquibase:liquibase-core'

	implementation 'org.ehcache:ehcache:3.10.0'
	implementation 'javax.cache:cache-api:1.1.1'

	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'



	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation ('org.springframework.boot:spring-boot-starter-test'){
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}
test{
	useJUnitPlatform()
}
task generatePostsAndComments(){
	doLast {
		File dataSql=file("src/main/resources/data.sql")
		dataSql.write("")
		for(int i=1;i<=100;i++){
			dataSql.append("insert into post(id,title,content,created)" +
					"values (${i},'Test post ${i}','Content ${i}','"+ LocalDateTime.now().minusDays(100-i)+"');\n")
		}
		for(int i=1;i<=100;i++){
			int postId=1+i/10
			dataSql.append("insert into comment(id,post_id,content,created)" +
					"values (${i},${postId},'Content ${i}','"+ LocalDateTime.now().minusDays(100-i)+"');\n")
		}
	}
}